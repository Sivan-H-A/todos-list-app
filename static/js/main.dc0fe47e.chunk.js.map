{"version":3,"sources":["Components/TodosItemComponent/TodosItemComponent.js","Components/TodosListComponent/TodosListComponent.js","Model/TodoItem.js","App.js","reportWebVitals.js","index.js"],"names":["TodosItemComponent","todoItem","onCheckedItem","onDeleteItem","useState","disabledClass","setDisabledClass","checked","setChecked","show","setShow","useEffect","completed","type","className","onChange","e","target","id","onCheckboxClick","title","Button","onClick","Modal","onHide","Header","closeButton","Title","Body","Footer","variant","TodosListComponent","todosList","onCheckedTodo","length","sum","setSum","toggleBtn1","setToggleBtn1","toggleBtn2","setToggleBtn2","toggleBtn3","setToggleBtn3","filter","x","setCompleted","filterList","setFilterList","todosListGroup","setFilter","concat","itemId","onDeleteItemCompleted","item","map","push","ListGroup","Item","Container","ButtonGroup","TodoItemModel","this","getRandomIntInclusive","min","max","Math","ceil","floor","random","App","todos","setTodos","localTodos","JSON","parse","localStorage","getItem","setItem","stringify","placeholder","onKeyDown","key","value","handleKeyDown","tempArr","splice","findIndex","console","log","el","find","tempTodo","indexOf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc0fe47e.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\n\r\nexport default function TodosItemComponent({todoItem, onCheckedItem, onDeleteItem}) {\r\n    const [disabledClass, setDisabledClass] = useState(\"\");\r\n    const [checked, setChecked] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n\r\n    function onCheckboxClick(e){      \r\n        setDisabledClass(e.target.checked? \"c-todo-item-checked\":\"\");\r\n        setChecked(e.target.checked? true : false);  \r\n        onCheckedItem(todoItem.id,e.target.checked);\r\n    }\r\n\r\n    useEffect(() => {     \r\n        setChecked (todoItem.completed? true: false)\r\n        setDisabledClass(todoItem.completed? \"c-todo-item-checked\":\"\");       \r\n    }, [todoItem])\r\n\r\n    function onDeleteTodoItem(){\r\n        if(todoItem.completed){\r\n            onDeleteItem(todoItem)\r\n        }\r\n        else{\r\n            setShow(true);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <input type=\"checkbox\" className=\"c-checkbox text-center col-2\" checked={checked} onChange={(e)=> onCheckboxClick(e)}/>\r\n            <label className={`${disabledClass} c-label col-8`}>\r\n                {todoItem.title}\r\n            </label>\r\n            <Button className=\"todo-cancel-item btn-danger\" onClick={()=> onDeleteTodoItem()}>x</Button>\r\n            <Modal show={show} onHide={()=>setShow(false)}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Delete Todo</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Are you sure you want to delete todo: {todoItem.title}</Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>setShow(false)}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={()=> {\r\n                                                        setShow(false);\r\n                                                        onDeleteItem(todoItem)}}>\r\n                    OK\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, ButtonGroup,Container, ListGroup } from 'react-bootstrap'\r\nimport TodosItemComponent from '../TodosItemComponent/TodosItemComponent'\r\nimport './TodosListComponent.css'\r\n\r\nexport default function TodosListComponent({todosList, onDeleteItem, onCheckedTodo}) {\r\n    const [sum, setSum] = useState(todosList.length);\r\n    const [toggleBtn1, setToggleBtn1] = useState(true);\r\n    const [toggleBtn2, setToggleBtn2] = useState(false);\r\n    const [toggleBtn3, setToggleBtn3] = useState(false);\r\n    const [completed, setCompleted] = useState(todosList.filter(x=>x.completed).length);\r\n    const [filterList, setFilterList] = useState([]);\r\n\r\n    const todosListGroup = []; \r\n\r\n    useEffect(() => {\r\n        setSum(todosList.length - completed)\r\n        setFilter();\r\n    }, [todosList,completed]);\r\n\r\n    useEffect(() => {\r\n        setFilter()\r\n    }, [toggleBtn1, toggleBtn2,toggleBtn3])\r\n\r\n    function setFilter(){\r\n        if(toggleBtn3){\r\n            setFilterList(todosList.filter(x=> x.completed));\r\n        }\r\n        if(toggleBtn2){\r\n            setFilterList(todosList.filter(x=> !x.completed));\r\n        }\r\n        if(toggleBtn1){\r\n            let tempArr = [];\r\n            setFilterList(tempArr.concat(todosList));\r\n        }\r\n    }\r\n    \r\n    function onCheckedItem(itemId, checked){\r\n        setCompleted(checked? completed+1: completed-1);\r\n        onCheckedTodo(itemId,checked);\r\n    };\r\n    function onDeleteItemCompleted(item){\r\n        if(item.completed){\r\n            setCompleted(completed -1);\r\n        }\r\n        onDeleteItem(item);\r\n    }\r\n    \r\n    filterList.map((item)=>{\r\n        todosListGroup.push(\r\n            <ListGroup.Item className=\"c-todo-item row\" key={item.id}>         \r\n               <TodosItemComponent todoItem ={item}\r\n                                    onCheckedItem={onCheckedItem} \r\n                                    onDeleteItem={ (e)=> onDeleteItemCompleted(e)}/>\r\n            </ListGroup.Item>       \r\n        );\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            <ListGroup variant=\"flush\" >\r\n                {todosListGroup}         \r\n            </ListGroup>\r\n            <div className=\"c-todos-list-info\">\r\n                <h6 className=\"text-center c-todo-info-title\">{sum} Items left</h6>\r\n                <ButtonGroup className=\"c-info-listgroup\">\r\n                    <Button variant=\"outline-primary\" className={toggleBtn1 ? \"c-btn-marked\":\"\"} \r\n                            onClick={(e)=>{setToggleBtn1(true); setToggleBtn2(false); setToggleBtn3(false);}}>All</Button>\r\n                    <Button variant=\"outline-primary\" className={toggleBtn2 ? \"c-btn-marked\":\"\"} \r\n                            onClick={(e)=>{setToggleBtn2(true); setToggleBtn1(false); setToggleBtn3(false);}}>Active</Button>\r\n                    <Button variant=\"outline-primary\" className={toggleBtn3 ? \"c-btn-marked\":\"\"} \r\n                            onClick={(e)=>{setToggleBtn3(true); setToggleBtn1(false); setToggleBtn2(false);}}>Completed</Button>\r\n                </ButtonGroup>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n","class TodoItemModel{\r\n    constructor(title){\r\n        this.title = title;\r\n        this.id = this.getRandomIntInclusive(1,100);\r\n        this.completed = false;        \r\n    }\r\n    getRandomIntInclusive(min,max){\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\r\n    }\r\n}\r\nexport default TodoItemModel;","import './App.css';\nimport {  Container } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState ,useEffect } from 'react';\nimport TodosListComponent from './Components/TodosListComponent/TodosListComponent';\nimport TodoItemModel from './Model/TodoItem';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    var localTodos = JSON.parse(localStorage.getItem('todos'));\n    if(localTodos){\n      setTodos(localTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    if(todos){\n      localStorage.setItem('todos',JSON.stringify(todos));\n    }\n  }, [todos]);\n\n  function handleKeyDown(e){\n    if(e.key==='Enter' && e.target.value){\n      setTodos(todos.concat(new TodoItemModel(e.target.value)));\n      e.target.value=\"\";\n    }\n  }\n  function onCheckedTodo(itemId,checked){\n    let el = todos.find(x=>x.id===itemId);\n    const tempTodo = new TodoItemModel(el.title);\n    tempTodo.completed = checked;\n    let tempArr = [];\n    tempArr = tempArr.concat(todos);\n    tempArr.splice(tempArr.indexOf(el),1,tempTodo);\n    setTodos(tempArr);\n  }\n  function onDeleteItem(item){\n    let tempArr = [];\n      todos.splice(todos.findIndex(x=>x.id===item.id),1);\n      tempArr= tempArr.concat(todos);\n      console.log(tempArr);\n      setTodos(tempArr);\n  }\n \n  return (\n    <Container className=\"App\">\n        <h1 className=\"text-center row todos-header\">Todos</h1>\n        <input className=\"row todos-input\" placeholder=\"What's next?\" onKeyDown={(e)=>handleKeyDown(e)}></input>\n        {todos && todos.length>0 ? <TodosListComponent todosList={todos} onDeleteItem={onDeleteItem} onCheckedTodo={onCheckedTodo}/> : \"\" }\n        \n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}